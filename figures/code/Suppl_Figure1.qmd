---
title: "Figure 2"
subtitle: "Bacher Group"
date: today
date-format: long
author:
  - name: Jack R. Leary
    orcid: 0009-0004-8821-3269
    email: j.leary@ufl.edu
    corresponding: true
    affiliation: 
      - name: University of Florida
        department: Department of Biostatistics
        city: Gainesville
        state: FL
        country: US
format:
  html: 
    theme: journal
    highlight-style: tango
    toc: true
    toc-depth: 2
    toc-location: left
    code-copy: hover
    code-tools: true
    code-fold: show
    embed-resources: true
    number-sections: true
    fig-width: 6
    fig-height: 4
    fig-dpi: 320
    fig-align: center
    fig-cap-location: bottom
    tbl-cap-location: bottom
editor: source
---

```{r setup}
#| include: false
knitr::opts_chunk$set(comment = NA)
set.seed(312)  # lucky seed
```

# Libraries {#sec-libs}

```{r}
#| message: false
#| warning: false
library(dplyr)      # data manipulation
library(scLANE)     # trajectory DE testing
library(ggplot2)    # pretty plots
library(patchwork)  # plot alignment
```

# Data {#sec-data}

```{r}
metric_table_master <- qs::qread("../../data/simulation/metric_table_master")
```

# Visualization tools {#sec-viz-tools}

```{r}
palette_models <- c("#DC0000FF", "#00A1D5FF", "#D37295FF", "#349B58FF", "#9467BDFF", "#F1C111FF")
names(palette_models) <- c("scLANE - GLM", "tradeSeq", "scLANE - GEE", "scLANE - GLMM", "Lamian", "PseudotimeDE")
```

# Supplementary Figure 1 {#sec-fig1}

## A

```{r}
#| fig-width: 2.43
#| fig-height: 2.5
S_Fig_1A <- filter(metric_table_master, 
                   MODEL_TYPE %in% c("scLANE - GLM", "tradeSeq", "PseudotimeDE")) %>% 
            mutate(N_CELLS = round(N_CELLS, -1), 
                   N_CELLS = as.factor(N_CELLS)) %>% 
            ggplot(aes(x = N_CELLS, y = F_MEASURE, color = MODEL_TYPE)) + 
            geom_boxplot(linewidth = 0.5, 
                         fatten = 0.75, 
                         alpha = 0.25, 
                         outlier.shape = NA, 
                         position = position_dodge(width = 1), 
                         key_glyph = "path") + 
            geom_point(size = 1, 
                       alpha = 1, 
                       stroke = 0, 
                       show.legend = FALSE, 
                       position = position_jitterdodge(dodge.width = 1, seed = 312)) + 
            scale_y_continuous(labels = scales::label_percent(accuracy = 1), limits = c(NA, 1)) + 
            scale_color_manual(values = palette_models) + 
            labs(x = "Cells", y = "F-measure") + 
            theme_scLANE(base.size = 9) + 
            theme(legend.title = element_blank(),
                  legend.position = "top", 
                  legend.direction = "horizontal",
                  legend.spacing.y = unit(0.00005, "in"),
                  legend.text = element_text(margin = margin(r = 0.01, l = 0.01, unit = "in")), 
                  legend.margin = margin(t = -0.02, b = -0.02, unit = "in")) + 
            guides(color = guide_legend(override.aes = list(linewidth = 2, alpha = 1), 
                                        direction = "horizontal",
                                        title.position = "top",
                                        title.hjust = 0.5,
                                        label.position = "bottom", 
                                        title = NULL), 
                   fill = NULL)
S_Fig_1A
```

```{r}
ggsave("Suppl_Figure_1A.png",
       plot = S_Fig_1A, 
       device = "png", 
       path = "../png/",
       width = 2.5, 
       height = 2.5, 
       units = "in", 
       dpi = 300)
```

## B

```{r}
#| fig-width: 2.4
#| fig-height: 2.5
S_Fig_1B <- filter(metric_table_master, 
                   MODEL_TYPE %in% c("scLANE - GLM", "tradeSeq", "PseudotimeDE")) %>% 
            mutate(N_CELLS = round(N_CELLS, -1), 
                   N_CELLS = as.factor(N_CELLS)) %>% 
            ggplot(aes(x = N_CELLS, y = SENSITIVITY, color = MODEL_TYPE)) + 
            geom_boxplot(linewidth = 0.5, 
                         fatten = 0.75, 
                         alpha = 0.25, 
                         outlier.shape = NA, 
                         position = position_dodge(width = 1), 
                         key_glyph = "path") + 
            geom_point(size = 1, 
                       alpha = 1, 
                       stroke = 0, 
                       show.legend = FALSE, 
                       position = position_jitterdodge(dodge.width = 1, seed = 312)) + 
            scale_y_continuous(labels = scales::label_percent(accuracy = 1), limits = c(NA, 1)) + 
            scale_color_manual(values = palette_models) + 
            labs(x = "Cells", y = "Sensitivity") + 
            theme_scLANE(base.size = 9) + 
            theme(legend.position = "none")
S_Fig_1B
```

```{r}
ggsave("Suppl_Figure_1B.png",
       plot = S_Fig_1B, 
       device = "png", 
       path = "../png/",
       width = 2.4, 
       height = 2.5, 
       units = "in", 
       dpi = 300)
```

## C

```{r}
#| fig-width: 2.4
#| fig-height: 2.5
S_Fig_1C <- filter(metric_table_master, 
                   MODEL_TYPE %in% c("scLANE - GLM", "tradeSeq", "PseudotimeDE")) %>% 
            mutate(N_CELLS = round(N_CELLS, -1), 
                   N_CELLS = as.factor(N_CELLS)) %>% 
            ggplot(aes(x = N_CELLS, y = SPECIFICITY, color = MODEL_TYPE)) + 
            geom_boxplot(linewidth = 0.5, 
                         fatten = 0.75, 
                         alpha = 0.25, 
                         outlier.shape = NA, 
                         position = position_dodge(width = 1), 
                         key_glyph = "path") + 
            geom_point(size = 1, 
                       alpha = 1, 
                       stroke = 0, 
                       show.legend = FALSE, 
                       position = position_jitterdodge(dodge.width = 1, seed = 312)) + 
            scale_y_continuous(labels = scales::label_percent(accuracy = 1), limits = c(NA, 1)) + 
            scale_color_manual(values = palette_models) + 
            labs(x = "Cells", y = "Specificity") + 
            theme_scLANE(base.size = 9) + 
            theme(legend.position = "none")
S_Fig_1C
```

```{r}
ggsave("Suppl_Figure_1C.png",
       plot = S_Fig_1C, 
       device = "png", 
       path = "../png/",
       width = 2.4, 
       height = 2.5, 
       units = "in", 
       dpi = 300)
```

## D

```{r}
#| fig-width: 7.3
#| fig-height: 3
S_Fig_1D <- filter(metric_table_master, 
                   MODEL_TYPE %in% c("scLANE - GEE", "scLANE - GLMM")) %>% 
            ggplot(aes(x = SIM_REFERENCE, y = BAL_ACCURACY, color = MODEL_TYPE)) + 
            facet_wrap(~MODEL_TYPE, ncol = 2) + 
            geom_boxplot(linewidth = 0.5, 
                         fatten = 0.75, 
                         alpha = 0.25, 
                         outlier.shape = NA, 
                         position = position_dodge(width = 1), 
                         key_glyph = "path") + 
            geom_point(size = 1, 
                       alpha = 1, 
                       stroke = 0, 
                       show.legend = FALSE, 
                       position = position_jitterdodge(dodge.width = 1, seed = 312)) + 
            scale_y_continuous(labels = scales::label_percent(accuracy = 1), limits = c(NA, 1)) + 
            scale_color_manual(values = palette_models) + 
            labs(x = "Reference Dataset", y = "Balanced Accuracy") + 
            theme_scLANE(base.size = 9) + 
            theme(legend.position = "none")
S_Fig_1D
```

```{r}
ggsave("Suppl_Figure_1D.png",
       plot = S_Fig_1D, 
       device = "png", 
       path = "../png/",
       width = 7.3, 
       height = 2.5, 
       units = "in", 
       dpi = 300)
```

## E

```{r}
#| fig-width: 3.5
#| fig-height: 2.5
S_Fig_1E <- filter(metric_table_master, 
                   MODEL_TYPE %in% c("scLANE - GLMM", "scLANE - GEE", "Lamian")) %>% 
            select(DATASET_NAME, N_CELLS, MODEL_TYPE, MEM_USED) %>% 
            mutate(N_CELLS = round(N_CELLS, -1), 
                   N_CELLS = as.factor(N_CELLS)) %>% 
            with_groups(c(MODEL_TYPE, N_CELLS), 
                        summarise, 
                        MU = mean(MEM_USED / 1000), 
                        SD = sd(MEM_USED / 1000), 
                        N = n()) %>%
            mutate(SE = SD / N) %>% 
            ggplot(aes(x = N_CELLS, y = MU, fill = MODEL_TYPE, color = MODEL_TYPE)) + 
            geom_bar(stat = "identity", 
                     position = position_dodge2(padding = 0.2), 
                     width = 0.5, 
                     key_glyph = "path") + 
            scale_color_manual(values = palette_models) + 
            scale_fill_manual(values = palette_models) + 
            labs(x = "Cells", y = "Mean Memory (GB)") + 
            theme_scLANE(base.size = 9) + 
            theme(legend.title = element_blank()) + 
            guides(color = guide_legend(override.aes = list(linewidth = 2, alpha = 1)))
S_Fig_1E
```

```{r}
ggsave("Suppl_Figure_1E.png",
       plot = S_Fig_1E, 
       device = "png", 
       path = "../png/",
       width = 3.6, 
       height = 2.5, 
       units = "in", 
       dpi = 300)
```

## F

```{r}
#| fig-width: 3.5
#| fig-height: 2.5
#| message: false
#| warning: false
S_Fig_1F <- filter(metric_table_master, 
                   MODEL_TYPE %in% c("Lamian", "scLANE - GLMM", "scLANE - GEE")) %>% 
            select(DATASET_NAME, MODEL_TYPE, N_CELLS, N_GENES, RUNTIME_HOURS) %>% 
            mutate(N_CELLS = round(N_CELLS, -1), 
                   RUNTIME_MINS = RUNTIME_HOURS * 60, 
                   GENES_PER_MIN = N_GENES / RUNTIME_MINS) %>% 
            ggplot(aes(x = N_CELLS, y = GENES_PER_MIN, color = MODEL_TYPE, fill = MODEL_TYPE)) + 
            geom_point(size = 1.5, 
                       alpha = 0.4,
                       stroke = 0, 
                       show.legend = FALSE) + 
            geom_smooth(linewidth = 0.75, 
                        se = FALSE, 
                        show.legend = FALSE, 
                        method = "loess", 
                        span = 1.25) + 
            scale_x_continuous(limits = c(100, 5000), breaks = c(100, 1000, 3000, 5000)) + 
            scale_y_continuous(limits = c(0, NA_real_)) + 
            scale_color_manual(values = palette_models) + 
            scale_fill_manual(values = palette_models) + 
            labs(x = "Cells", y = "Genes per Minute") + 
            theme_scLANE(base.size = 9)
S_Fig_1F
```

```{r}
ggsave("Suppl_Figure_1F.png",
       plot = S_Fig_1F, 
       device = "png", 
       path = "../png/",
       width = 3.6, 
       height = 2.5, 
       units = "in", 
       dpi = 300)
```

# Session info {#sec-SI}

```{r}
sessioninfo::session_info()
```
