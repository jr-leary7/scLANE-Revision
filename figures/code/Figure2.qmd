---
title: "Figure 2"
subtitle: "Bacher Group"
date: today
date-format: long
author:
  - name: Jack R. Leary
    orcid: 0009-0004-8821-3269
    email: j.leary@ufl.edu
    corresponding: true
    affiliation: 
      - name: University of Florida
        department: Department of Biostatistics
        city: Gainesville
        state: FL
        country: US
format:
  html: 
    theme: journal
    highlight-style: tango
    toc: true
    toc-depth: 2
    toc-location: left
    code-copy: hover
    code-tools: true
    code-fold: show
    embed-resources: true
    number-sections: true
    fig-width: 6
    fig-height: 4
    fig-dpi: 320
    fig-align: center
    fig-cap-location: bottom
    tbl-cap-location: bottom
editor: source
---

```{r setup}
#| include: false
knitr::opts_chunk$set(comment = NA)
set.seed(312)  # lucky seed
```

# Libraries  {#sec-libs}

```{r}
#| message: false
#| warning: false
library(dplyr)      # data manipulation
library(scLANE)     # trajectory DE testing
library(ggplot2)    # pretty plots
library(patchwork)  # plot alignment
```

# Data {#sec-data}

```{r}
metric_table_master <- qs::qread("../../data/simulation/metric_table_master")
```

# Visualization tools {#sec-viz-tools}

```{r}
palette_models <- c("#DC0000FF", "#00A1D5FF", "#D37295FF", "#349B58FF")
names(palette_models) <- c("scLANE - GLM", "tradeSeq", "scLANE - GEE", "scLANE - GLMM")
```

# Figure 2 {#sec-fig2}

## A

```{r}
filter(metric_table_master, 
                 MODEL_TYPE %in% c("scLANE - GLM", "tradeSeq")) %>% 
  summarise(mu = round(mean(BAL_ACCURACY), 3),
            mid = round(median(BAL_ACCURACY), 3),
            n = n(), 
            .by = c(SIM_REFERENCE, MODEL_TYPE)) %>% 
  arrange(SIM_REFERENCE, desc(mu))
```

```{r}
#| fig-width: 2.4
#| fig-height: 2.5
Fig_2A <- filter(metric_table_master, 
                 MODEL_TYPE %in% c("scLANE - GLM", "tradeSeq")) %>% 
          mutate(N_CELLS = round(N_CELLS, -1), 
                 N_CELLS = as.factor(N_CELLS)) %>% 
          ggplot(aes(x = N_CELLS, y = BAL_ACCURACY, color = MODEL_TYPE)) + 
          geom_boxplot(linewidth = 0.75, 
                       fatten = 0.75, 
                       alpha = 0.25, 
                       outlier.shape = NA, 
                       position = position_dodge(width = 1), 
                       key_glyph = "path") + 
          geom_point(size = 1, 
                     alpha = 1, 
                     stroke = 0, 
                     show.legend = FALSE, 
                     position = position_jitterdodge(dodge.width = 1, seed = 312)) + 
          scale_y_continuous(labels = scales::label_percent(accuracy = 1), limits = c(NA, 1)) + 
          scale_color_manual(values = palette_models) + 
          labs(x = "Cells", y = "Balanced Accuracy") + 
          theme_scLANE(base.size = 9) + 
          theme(legend.title = element_blank(),
                legend.position = "top", 
                legend.direction = "horizontal",
                legend.spacing.x = unit(0.02, "in"),
                legend.text = element_text(margin = margin(r = 0.1, unit = "in")), 
                legend.margin = margin(t = -0.02, b = -0.02, unit = "in")) + 
          guides(color = guide_legend(override.aes = list(linewidth = 2, alpha = 1)), 
                 fill = NULL)
Fig_2A
```

```{r}
ggsave("Figure_2A.png",
       plot = Fig_2A, 
       device = "png", 
       path = "../png/",
       width = 2.4, 
       height = 2.9, 
       units = "in", 
       dpi = 300)
```

## B 

```{r}
filter(metric_table_master, 
       MODEL_TYPE %in% c("scLANE - GLM", "tradeSeq")) %>% 
  select(DATASET_NAME, N_CELLS, MODEL_TYPE, MEM_USED) %>% 
  mutate(N_CELLS = round(N_CELLS, -1), 
         N_CELLS = as.factor(N_CELLS)) %>% 
  with_groups(c(MODEL_TYPE, N_CELLS), 
              summarise, 
              MU = round(mean(MEM_USED) / 1000, 3)) %>% 
  arrange(N_CELLS, MU)
```

```{r}
#| fig-width: 2.4
#| fig-height: 2.5
Fig_2B <- filter(metric_table_master, 
                 MODEL_TYPE %in% c("scLANE - GLM", "tradeSeq")) %>% 
          select(DATASET_NAME, N_CELLS, MODEL_TYPE, MEM_USED) %>% 
          mutate(N_CELLS = round(N_CELLS, -1), 
                 N_CELLS = as.factor(N_CELLS)) %>% 
          with_groups(c(MODEL_TYPE, N_CELLS), 
                      summarise, 
                      MU = mean(MEM_USED / 1000), 
                      SD = sd(MEM_USED / 1000), 
                      N = n()) %>%
          mutate(SE = SD / N) %>% 
          ggplot(aes(x = N_CELLS, y = MU, fill = MODEL_TYPE)) + 
          geom_bar(stat = "identity", 
                   position = position_dodge2(padding = 0.2), 
                   width = 0.5) + 
          scale_color_manual(values = palette_models) + 
          scale_fill_manual(values = palette_models) + 
          labs(x = "Cells", y = "Mean Memory (GB)") + 
          theme_scLANE(base.size = 9) + 
          theme(legend.position = "none")
Fig_2B
```

```{r}
ggsave("Figure_2B.png",
       plot = Fig_2B, 
       device = "png", 
       path = "../png/",
       width = 2.4, 
       height = 2.9, 
       units = "in", 
       dpi = 300)
```

## C

```{r}
filter(metric_table_master, 
       MODEL_TYPE %in% c("scLANE - GLM", "tradeSeq")) %>% 
  select(DATASET_NAME, MODEL_TYPE, N_CELLS, N_GENES, RUNTIME_HOURS) %>% 
  mutate(N_CELLS = round(N_CELLS, -1), 
         RUNTIME_MINS = RUNTIME_HOURS * 60, 
         GENES_PER_MIN = N_GENES / RUNTIME_MINS) %>% 
  with_groups(c(MODEL_TYPE, N_CELLS), 
              summarise, 
              MU = round(median(GENES_PER_MIN), 3)) %>% 
  arrange(N_CELLS, desc(MU))
```

```{r}
#| fig-width: 2.4
#| fig-height: 2.9
#| message: false
#| warning: false
Fig_2C <- filter(metric_table_master, 
                 MODEL_TYPE %in% c("scLANE - GLM", "tradeSeq")) %>% 
          select(DATASET_NAME, MODEL_TYPE, N_CELLS, N_GENES, RUNTIME_HOURS) %>% 
          mutate(N_CELLS = round(N_CELLS, -1), 
                 RUNTIME_MINS = RUNTIME_HOURS * 60, 
                 GENES_PER_MIN = N_GENES / RUNTIME_MINS) %>% 
          ggplot(aes(x = N_CELLS, y = GENES_PER_MIN, color = MODEL_TYPE, fill = MODEL_TYPE)) + 
          geom_point(size = 1.5, 
                     alpha = 0.4,
                     stroke = 0, 
                     show.legend = FALSE) + 
          geom_smooth(linewidth = 0.75, 
                      se = FALSE, 
                      show.legend = FALSE, 
                      method = "loess", 
                      span = 1.25) + 
          scale_x_continuous(limits = c(100, 5000), breaks = c(100, 1000, 3000, 5000)) + 
          scale_color_manual(values = palette_models) + 
          scale_fill_manual(values = palette_models) + 
          labs(x = "Cells", y = "Genes per Minute") + 
          theme_scLANE(base.size = 9)
Fig_2C
```

```{r}
ggsave("Figure_2C.png",
       plot = Fig_2C, 
       device = "png", 
       path = "../png/",
       width = 2.4, 
       height = 2.9, 
       units = "in", 
       dpi = 300)
```

## D

```{r}
#| fig-width: 2.5
#| fig-height: 3
Fig_2D <- filter(metric_table_master, 
                 MODEL_TYPE == "scLANE - GEE") %>%
          mutate(N_CELLS = round(N_CELLS, -1), 
                 N_CELLS = as.factor(N_CELLS)) %>% 
          ggplot(aes(x = N_CELLS, y = BAL_ACCURACY, color = MODEL_TYPE)) + 
          geom_boxplot(linewidth = 0.75, 
                       fatten = 0.75, 
                       alpha = 0.25, 
                       outlier.shape = NA, 
                       key_glyph = "path") + 
          geom_point(size = 1, 
                     alpha = 1, 
                     stroke = 0, 
                     show.legend = FALSE, 
                     position = position_jitter(seed = 312, width = 0.2)) + 
          scale_y_continuous(labels = scales::label_percent(accuracy = 1)) + 
          scale_color_manual(values = palette_models) +  
          labs(x = "Cells", y = "Balanced Accuracy") + 
          theme_scLANE(base.size = 9) + 
          theme(legend.title = element_blank(),
                legend.position = "top", 
                legend.direction = "horizontal",
                legend.spacing.x = unit(0.02, "in"),
                legend.text = element_text(margin = margin(r = 0.1, unit = "in")), 
                legend.margin = margin(t = -0.02, b = -0.02, unit = "in")) + 
          guides(color = guide_legend(override.aes = list(linewidth = 2, alpha = 1)), 
                 fill = NULL)
Fig_2D
```

```{r}
ggsave("Figure_2D.png",
       plot = Fig_2D, 
       device = "png", 
       path = "../png/",
       width = 2.5, 
       height = 3, 
       units = "in", 
       dpi = 300)
```

## E

```{r}
#| fig-width: 4.8
#| fig-height: 2.5
Fig_2E <- filter(metric_table_master, 
                 MODEL_TYPE == "scLANE - GLMM") %>%
          mutate(DYN_GENE_OVERLAP = gsub(".*OVERLAP_", "", DATASET_NAME),
                 DYN_GENE_OVERLAP = as.factor(paste0(gsub("_.*", "", DYN_GENE_OVERLAP), "%")),
                 N_CELLS = round(N_CELLS, -1), 
                 N_CELLS = as.factor(N_CELLS), 
                 .before = 2) %>% 
          ggplot(aes(x = DYN_GENE_OVERLAP, y = BAL_ACCURACY, color = MODEL_TYPE)) + 
          facet_wrap(~N_CELLS, ncol = 5) + 
          geom_boxplot(linewidth = 0.75, 
                       fatten = 0.75, 
                       alpha = 0.25, 
                       outlier.shape = NA, 
                       key_glyph = "path") + 
          geom_point(size = 1, 
                     alpha = 1, 
                     stroke = 0, 
                     show.legend = FALSE, 
                     position = position_jitter(seed = 312, width = 0.2)) + 
          scale_y_continuous(labels = scales::label_percent(accuracy = 1)) + 
          scale_color_manual(values = palette_models) +  
          labs(x = "Dynamic Gene Overlap Between Subjects", 
               y = "Balanced Accuracy", 
               subtitle = "Cells") + 
          theme_scLANE(base.size = 9) + 
          theme(legend.position = "none", plot.subtitle = element_text(hjust = 0.5))
Fig_2E
```

```{r}
ggsave("Figure_2E.png",
       plot = Fig_2E, 
       device = "png", 
       path = "../png/",
       width = 4.8, 
       height = 3, 
       units = "in", 
       dpi = 300)
```

## F

```{r}
#| fig-width: 2.5
#| fig-height: 3
Fig_2F <- filter(metric_table_master, 
                 MODEL_TYPE == "scLANE - GEE") %>%
          mutate(DYN_GENE_OVERLAP = gsub(".*OVERLAP_", "", DATASET_NAME),
                 DYN_GENE_OVERLAP = as.factor(paste0(gsub("_.*", "", DYN_GENE_OVERLAP), "%")),
                 .before = 2) %>% 
          ggplot(aes(x = DYN_GENE_OVERLAP, y = BAL_ACCURACY, color = MODEL_TYPE)) + 
          geom_boxplot(linewidth = 0.75, 
                       fatten = 0.75, 
                       alpha = 0.25, 
                       outlier.shape = NA, 
                       key_glyph = "path") + 
          geom_point(size = 1, 
                     alpha = 1, 
                     stroke = 0, 
                     show.legend = FALSE, 
                     position = position_jitter(seed = 312, width = 0.2)) + 
          scale_y_continuous(labels = scales::label_percent(accuracy = 1)) + 
          scale_color_manual(values = palette_models) +  
          labs(x = "Dynamic Gene Overlap", y = "Balanced Accuracy") + 
          theme_scLANE(base.size = 9) + 
          theme(legend.position = "none")
Fig_2F
```

```{r}
ggsave("Figure_2F.png",
       plot = Fig_2F, 
       device = "png", 
       path = "../png/",
       width = 2.5, 
       height = 3, 
       units = "in", 
       dpi = 300)
```

## G

```{r}
#| fig-width: 4.8
#| fig-height: 2.5
Fig_2G <- filter(metric_table_master, 
                 MODEL_TYPE == "scLANE - GLMM") %>%
          mutate(DYN_GENE_OVERLAP = gsub(".*OVERLAP_", "", DATASET_NAME),
                 DYN_GENE_OVERLAP = as.factor(paste0(gsub("_.*", "", DYN_GENE_OVERLAP), "%")),
                 GROUP_OVERLAP = as.factor(paste0(gsub(".*_GROUP_", "", DATASET_NAME), "%")), 
                 .before = 2) %>% 
          ggplot(aes(x = GROUP_OVERLAP, y = BAL_ACCURACY, color = MODEL_TYPE)) + 
          facet_wrap(~DYN_GENE_OVERLAP, ncol = 3) + 
          geom_boxplot(linewidth = 0.75, 
                       fatten = 0.75, 
                       alpha = 0.25, 
                       outlier.shape = NA, 
                       key_glyph = "path") + 
          geom_point(size = 1, 
                     alpha = 1, 
                     stroke = 0, 
                     show.legend = FALSE, 
                     position = position_jitter(seed = 312, width = 0.2)) + 
          scale_y_continuous(labels = scales::label_percent(accuracy = 1)) + 
          scale_color_manual(values = palette_models) +  
          labs(x = "Dynamic Gene Overlap Between Groups", 
               y = "Balanced Accuracy", 
               subtitle = "Dynamic Gene Overlap Between Subjects") + 
          theme_scLANE(base.size = 9) + 
          theme(legend.position = "none", 
                plot.subtitle = element_text(hjust = 0.5))
Fig_2G
```

```{r}
ggsave("Figure_2G.png",
       plot = Fig_2G, 
       device = "png", 
       path = "../png/",
       width = 4.8, 
       height = 3, 
       units = "in", 
       dpi = 300)
```

# Session info {#sec-SI}

```{r}
sessioninfo::session_info()
```
